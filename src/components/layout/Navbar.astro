---
// src/components/layout/Navbar.astro
import {
	HomeIcon,
	ArchiveBoxIcon,
	DocumentTextIcon,
	MagnifyingGlassIcon,
	Bars3Icon,
} from "@heroicons/react/24/outline";

const links = [
	{ href: "/", text: "Home", Icon: HomeIcon },
	{ href: "/portfolio", text: "Portfolio", Icon: ArchiveBoxIcon },
	{ href: "/blog", text: "Blog", Icon: DocumentTextIcon },
	{ href: "/search", text: "Search", Icon: MagnifyingGlassIcon },
];

const currentPath = Astro.url.pathname;
---

<nav
	class="sticky top-0 z-50 bg-green-600 bg-opacity-80 backdrop-blur-md shadow-lg transition"
>
	<div class="max-w-7xl mx-auto px-6">
		<div class="flex items-center justify-between h-16">
			<a
				href="/"
				class="text-white font-bold text-2xl tracking-tight hover:opacity-90 transition"
			>
				Jacob W
			</a>
			<div class="hidden md:flex space-x-6">
				{
					links.map(({ href, text, Icon }) => {
						const isActive = currentPath === href;
						return (
							<a
								href={href}
								class:list={[
									"flex items-center gap-2 text-white hover:text-green-300 transition",
									isActive && "underline underline-offset-4",
								]}
								aria-current={isActive ? "page" : undefined}
							>
								<Icon className="w-5 h-5" />
								<span>{text}</span>
							</a>
						);
					})
				}
			</div>
			<div class="md:hidden">
				<button
					id="menuButton"
					class="p-2 text-white hover:text-green-300 transition focus:outline-none focus:ring-2 focus:ring-white"
					aria-label="Toggle menu"
					aria-expanded="false"
				>
					<Bars3Icon className="w-6 h-6" />
				</button>
			</div>
		</div>

		<!-- Mobile Menu -->
		<div
			id="mobileMenu"
			class="overflow-hidden max-h-0 opacity-0 transition-all duration-300 md:hidden"
			role="navigation"
		>
			<div class="flex flex-col space-y-4 py-4">
				{
					links.map(({ href, text, Icon }, index) => {
						const isActive = currentPath === href;
						return (
							<a
								href={href}
								class:list={[
									"flex items-center gap-2 px-4 py-2 text-white hover:bg-green-700 transition",
									isActive && "bg-green-700",
								]}
								style={`animation: fadeInFast 200ms ease-out ${index * 50}ms forwards;`}
								aria-current={isActive ? "page" : undefined}
							>
								<Icon className="w-5 h-5" />
								<span>{text}</span>
							</a>
						);
					})
				}
			</div>
		</div>
	</div>
</nav>

<style>
	@keyframes fadeInFast {
		from {
			opacity: 0;
			transform: translateY(8px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>

<script>
	const menuButton = document.getElementById("menuButton");
	const mobileMenu = document.getElementById("mobileMenu");
	menuButton?.addEventListener("click", () => {
		const isOpen = mobileMenu.classList.contains("max-h-0");
		if (isOpen) {
			mobileMenu.classList.remove("max-h-0", "opacity-0");
			mobileMenu.classList.add("max-h-[300px]", "opacity-100");
			menuButton.setAttribute("aria-expanded", "true");
		} else {
			mobileMenu.classList.add("max-h-0", "opacity-0");
			mobileMenu.classList.remove("max-h-[300px]", "opacity-100");
			menuButton.setAttribute("aria-expanded", "false");
		}
	});
</script>
