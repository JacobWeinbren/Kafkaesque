---
interface Props {
	location?: "post" | "standalone";
}

const { location = "standalone" } = Astro.props;
---

<div
	class={`
    ${location === "post" ? "border-t border-gray-200 pt-8 mt-8" : "bg-white rounded-lg shadow-sm p-6"}
    max-w-xl mx-auto
`}
>
	<div class="text-center mb-6">
		<h3 class="text-2xl font-bold mb-2">Subscribe to my blog</h3>
		<p class="text-gray-600">
			Get notified when I publish new posts about development, data, and
			more.
		</p>
	</div>

	<form id="subscribeForm" class="space-y-4">
		<div>
			<label
				for="name"
				class="block text-sm font-medium text-gray-700 mb-1"
			>
				Name (optional)
			</label>
			<input
				type="text"
				id="name"
				name="name"
				class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
				placeholder="Your name"
			/>
		</div>

		<div>
			<label
				for="email"
				class="block text-sm font-medium text-gray-700 mb-1"
			>
				Email address
			</label>
			<input
				type="email"
				id="email"
				name="email"
				required
				class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
				placeholder="you@example.com"
			/>
		</div>

		<button
			type="submit"
			class="w-full bg-green-500 text-white py-2 px-4 rounded-lg font-medium hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2"
		>
			Subscribe
		</button>

		<p id="formMessage" class="text-sm text-center mt-4 hidden"></p>
	</form>
</div>

<script>
	const form = document.getElementById("subscribeForm") as HTMLFormElement;
	const messageEl = document.getElementById("formMessage");

	if (form && messageEl) {
		form.addEventListener("submit", async (e) => {
			e.preventDefault();
			const submitButton = form.querySelector("button");
			if (!submitButton) return;

			// Update button state
			submitButton.disabled = true;
			submitButton.textContent = "Subscribing...";

			try {
				const formData = new FormData(form);
				const response = await fetch("/api/signup", {
					method: "POST",
					body: formData,
				});

				const data = await response.json();

				// Show message
				messageEl.textContent = data.message;
				messageEl.className = `text-sm text-center mt-4 ${
					response.ok ? "text-green-600" : "text-red-600"
				}`;
				messageEl.classList.remove("hidden");

				// Reset form if successful
				if (response.ok) {
					form.reset();
					submitButton.textContent = "Subscribed!";
					submitButton.className =
						"w-full bg-green-600 text-white py-2 px-4 rounded-lg font-medium cursor-not-allowed";
				} else {
					submitButton.textContent = "Subscribe";
					submitButton.disabled = false;
				}
			} catch (error) {
				console.error("Subscription error:", error);
				messageEl.textContent = "An error occurred. Please try again.";
				messageEl.className = "text-sm text-center mt-4 text-red-600";
				messageEl.classList.remove("hidden");

				submitButton.textContent = "Subscribe";
				submitButton.disabled = false;
			}
		});
	}
</script>
