---

---

<div class="flex flex-col items-center mt-10">
  <p class="font-semibold text-center">Stay up to date</p>
  <p class="text-center">
    Subscribe to my blog to stay up to date on my articles and projects
  </p>
  <form
    id="createMemberForm"
    action="/api/signup"
    method="POST"
    class="flex gap-2 mt-4"
  >
    <input
      type="email"
      name="email"
      placeholder="Your email address"
      required
      class="px-4 py-2 border rounded"
      pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
      title="Please enter a valid email address."
    />
    <button type="submit" class="px-4 py-2 text-white bg-green-500 rounded"
      >Subscribe</button
    >
  </form>
</div>

<script>
  function waitForElm(selector) {
    return new Promise((resolve) => {
      if (document.querySelector(selector)) {
        return resolve(document.querySelector(selector));
      }
      const observer = new MutationObserver((mutations) => {
        if (document.querySelector(selector)) {
          observer.disconnect();
          resolve(document.querySelector(selector));
        }
      });
      try {
        observer.observe(document.body, {
          childList: true,
          subtree: true,
        });
      } catch (e) {
        observer.observe(document.documentElement, {
          childList: true,
          subtree: true,
        });
      }
    });
  }
  document.addEventListener("DOMContentLoaded", (event) => {
    waitForElm("#createMemberForm").then((form: HTMLFormElement) => {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const submitButton = form.querySelector('button[type="submit"]');
        const originalButtonText = submitButton.textContent;
        submitButton.textContent = "Loading...";
        submitButton.disabled = true;
        try {
          const formData = new FormData(form);
          const response = await fetch(form.action, {
            method: form.method,
            body: formData,
          });
          const result = await response.json();
          submitButton.textContent = response.ok ? "Success" : "Error";
          alert(result.message);
        } catch (error) {
          console.error("Fetch error:", error);
          submitButton.textContent = "Error";
          alert("An error occurred. Please try again.");
        } finally {
          setTimeout(() => {
            submitButton.textContent = originalButtonText;
            submitButton.disabled = false;
          }, 2000);
        }
      });
    });
  });
</script>
