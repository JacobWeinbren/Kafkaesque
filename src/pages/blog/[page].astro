---
import BaseLayout from "@/layouts/BaseLayout.astro";
import PostList from "@/components/PostList.astro";
import { getPosts } from "@/lib/ghost";
import { ChevronLeft, ChevronRight } from "lucide-react";
import type { Post } from "@ts-ghost/content-api";
interface Props {
	page: {
		data: Post[];
		url: { prev?: string; next?: string };
		currentPage: number;
		lastPage: number;
	};
}
export async function getStaticPaths({ paginate }) {
	const posts = await getPosts();
	return paginate(posts, { pageSize: 9 });
}
const { page } = Astro.props;
---

<BaseLayout
	title="Blog - Jacob Weinbren"
	description="Articles and thoughts on development, data, and more"
>
	<div class="max-w-4xl mx-auto px-4 py-16">
		<h1 class="text-4xl font-bold mb-8">Blog</h1>
		<PostList posts={page.data} />

		<nav class="flex justify-between mt-8" aria-label="Pagination">
			{
				page.url.prev && (
					<a
						href={page.url.prev}
						class="bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600 inline-flex items-center gap-2"
					>
						<ChevronLeft size={20} />
						Previous
					</a>
				)
			}
			<span class="text-gray-600">
				Page {page.currentPage} of {page.lastPage}
			</span>
			{
				page.url.next && (
					<a
						href={page.url.next}
						class="bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600 inline-flex items-center gap-2"
					>
						Next
						<ChevronRight size={20} />
					</a>
				)
			}
		</nav>
	</div>
</BaseLayout>
